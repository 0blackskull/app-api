version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: backend-api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True  # Disables Swagger docs in production
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-service-account.json
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-fastapi_firebase}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-fastapi_firebase}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SE_EPHE_PATH=/app/ephe
      - GOOGLE_PLAY_PACKAGE_NAME=${GOOGLE_PLAY_PACKAGE_NAME:-com.stellar.frontend}
      - AWS_REGION=${AWS_REGION}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - GOOGLE_PLAY_SERVICE_ACCOUNT_JSON=${GOOGLE_PLAY_SERVICE_ACCOUNT_JSON}
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - MAILGUN_BASE_URL=${MAILGUN_BASE_URL}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - FORCE_UPDATE_ENABLED=${FORCE_UPDATE_ENABLED}
      - MIN_SUPPORTED_VERSION_ANDROID=${MIN_SUPPORTED_VERSION_ANDROID}
      - MIN_SUPPORTED_VERSION_IOS=${MIN_SUPPORTED_VERSION_IOS}
      - FORCE_UPDATE_ANDROID_URL=${FORCE_UPDATE_ANDROID_URL}
      - FORCE_UPDATE_IOS_URL=${FORCE_UPDATE_IOS_URL}
      - APP_VERSION_HEADER=${APP_VERSION_HEADER}
      - APP_PLATFORM_HEADER=${APP_PLATFORM_HEADER}
    volumes:
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
      - ./app:/app/app:rw
      - ./migrations:/app/migrations:rw
      - ./main.py:/app/main.py:rw
      - ./alembic.ini:/app/alembic.ini:rw
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:13
    container_name: metadata-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-fastapi_firebase}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-fastapi_firebase}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: 