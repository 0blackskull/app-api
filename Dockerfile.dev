# Optimized development Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Install development dependencies (more than production)
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    pkg-config \
    build-essential \
    sqlite3 \
    git \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy only necessary files for development
COPY app/ ./app/
COPY migrations/ ./migrations/
COPY ephe/ ./ephe/
COPY jhora/ ./jhora/
COPY main.py .
COPY alembic.ini .
COPY docker-entrypoint.sh .

# Make entrypoint executable
RUN chmod +x /app/docker-entrypoint.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set entrypoint and command
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["gunicorn", "app.main:app", "--bind", "0.0.0.0:8000", "--workers", "2", "--worker-class", "uvicorn.workers.UvicornWorker", "--worker-connections", "1000", "--max-requests", "1000", "--max-requests-jitter", "50", "--timeout", "30", "--keep-alive", "5", "--preload", "--access-logfile", "-", "--error-logfile", "-", "--log-level", "info", "--reload"] 